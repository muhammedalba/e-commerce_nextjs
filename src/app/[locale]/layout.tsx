import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import "../../../public/assets/css/bootstrap.min.css";
import "../../../public/assets/css/plugins.css";
import "../../../public/assets/css/style.css";
// import "../../styles/scss/style.scss";

import { CartProvider } from "../../components/header/CartContext";
import { WishlistProvider } from "../../components/header/WishlistContext";
import { CompareProvider } from "../../components/header/CompareContext";

import "react-toastify/dist/ReactToastify.css";
import { ToastContainer } from "react-toastify";
import { getMessages } from "next-intl/server";

import Providers from "./providers";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Ekomart-Grocery-Store(e-Commerce) HTML Template",
  description: "Generated by create next app",
  icons: {
    icon: [
      {
        url: "/assets/images/fav.png",
        type: "image/x-icon",
      },
    ],
  },
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }
  const messages = await getMessages({ locale });
  return (
    <html lang={locale} dir={locale === "ar" ? "rtl" : "ltr"}>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <NextIntlClientProvider locale={locale} messages={messages}>
          <Providers>
            <CompareProvider>
              <WishlistProvider>
                <CartProvider>
                  {children}
                  <ToastContainer position="top-right" autoClose={3000} />
                </CartProvider>
              </WishlistProvider>
            </CompareProvider>
          </Providers>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
